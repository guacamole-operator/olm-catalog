---
defaultChannel: candidate-v0
name: guacamole-operator
schema: olm.package
---
entries:
- name: guacamole-operator.v0.1.0
name: candidate-v0
package: guacamole-operator
schema: olm.channel
---
image: ghcr.io/guacamole-operator/guacamole-operator-bundle:0.1.0
name: guacamole-operator.v0.1.0
package: guacamole-operator
properties:
- type: olm.gvk
  value:
    group: guacamole-operator.github.io
    kind: Connection
    version: v1alpha1
- type: olm.gvk
  value:
    group: guacamole-operator.github.io
    kind: Guacamole
    version: v1alpha1
- type: olm.package
  value:
    packageName: guacamole-operator
    version: 0.1.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6Imd1YWNhbW9sZS1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJndWFjYW1vbGUtb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJndWFjYW1vbGUtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldGFkYXRhOlxuICBsYWJlbHM6XG4gICAgYXBwLmt1YmVybmV0ZXMuaW8vbmFtZTogY29udHJvbGxlcm1hbmFnZXJjb25maWdcbiAgICBhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZTogY29udHJvbGxlci1tYW5hZ2VyLWNvbmZpZ3VyYXRpb25cbiAgICBhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQ6IG1hbmFnZXJcbiAgICBhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5OiBndWFjYW1vbGUtb3BlcmF0b3JcbiAgICBhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mOiBndWFjYW1vbGUtb3BlcmF0b3JcbiAgICBhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5OiBrdXN0b21pemVcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogNjQzYmM1NjIuZ3VhY2Ftb2xlLW9wZXJhdG9yLmdpdGh1Yi5pb1xuIyBsZWFkZXJFbGVjdGlvblJlbGVhc2VPbkNhbmNlbCBkZWZpbmVzIGlmIHRoZSBsZWFkZXIgc2hvdWxkIHN0ZXAgZG93biB2b2x1bWVcbiMgd2hlbiB0aGUgTWFuYWdlciBlbmRzLiBUaGlzIHJlcXVpcmVzIHRoZSBiaW5hcnkgdG8gaW1tZWRpYXRlbHkgZW5kIHdoZW4gdGhlXG4jIE1hbmFnZXIgaXMgc3RvcHBlZCwgb3RoZXJ3aXNlLCB0aGlzIHNldHRpbmcgaXMgdW5zYWZlLiBTZXR0aW5nIHRoaXMgc2lnbmlmaWNhbnRseVxuIyBzcGVlZHMgdXAgdm9sdW50YXJ5IGxlYWRlciB0cmFuc2l0aW9ucyBhcyB0aGUgbmV3IGxlYWRlciBkb24ndCBoYXZlIHRvIHdhaXRcbiMgTGVhc2VEdXJhdGlvbiB0aW1lIGZpcnN0LlxuIyBJbiB0aGUgZGVmYXVsdCBzY2FmZm9sZCBwcm92aWRlZCwgdGhlIHByb2dyYW0gZW5kcyBpbW1lZGlhdGVseSBhZnRlclxuIyB0aGUgbWFuYWdlciBzdG9wcywgc28gd291bGQgYmUgZmluZSB0byBlbmFibGUgdGhpcyBvcHRpb24uIEhvd2V2ZXIsXG4jIGlmIHlvdSBhcmUgZG9pbmcgb3IgaXMgaW50ZW5kZWQgdG8gZG8gYW55IG9wZXJhdGlvbiBzdWNoIGFzIHBlcmZvcm0gY2xlYW51cHNcbiMgYWZ0ZXIgdGhlIG1hbmFnZXIgc3RvcHMgdGhlbiBpdHMgdXNhZ2UgbWlnaHQgYmUgdW5zYWZlLlxuIyBsZWFkZXJFbGVjdGlvblJlbGVhc2VPbkNhbmNlbDogdHJ1ZVxuIn0sImtpbmQiOiJDb25maWdNYXAiLCJtZXRhZGF0YSI6eyJuYW1lIjoiZ3VhY2Ftb2xlLW9wZXJhdG9yLW1hbmFnZXItY29uZmlnIn19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6Imd1YWNhbW9sZS1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoibWV0cmljcy1yZWFkZXIiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNsdXN0ZXJyb2xlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6Imd1YWNhbW9sZS1vcGVyYXRvciJ9LCJuYW1lIjoiZ3VhY2Ftb2xlLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjb25uZWN0aW9ucy5ndWFjYW1vbGUtb3BlcmF0b3IuZ2l0aHViLmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJndWFjYW1vbGUtb3BlcmF0b3IuZ2l0aHViLmlvIiwibmFtZXMiOnsia2luZCI6IkNvbm5lY3Rpb24iLCJsaXN0S2luZCI6IkNvbm5lY3Rpb25MaXN0IiwicGx1cmFsIjoiY29ubmVjdGlvbnMiLCJzaW5ndWxhciI6ImNvbm5lY3Rpb24ifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5wcm90b2NvbCIsIm5hbWUiOiJQcm90b2NvbCIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb25uZWN0aW9uIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjb25uZWN0aW9ucyBBUEkuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb25uZWN0aW9uU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENvbm5lY3Rpb24uIiwicHJvcGVydGllcyI6eyJndWFjYW1vbGVSZWYiOnsiZGVzY3JpcHRpb24iOiJHdWFjYW1vbGVSZWYgcmVmZXJlbmNlcyB0aGUgaW5zdGFuY2UgdGhpcyBjb25uZWN0aW9uIGJlbG9uZ3MgdG8uIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgR3VhY2Ftb2xlIGluc3RhbmNlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJwYXJhbWV0ZXJzIjp7ImRlc2NyaXB0aW9uIjoiUGFyYW1ldGVyIG9mIHRoZSBjb25uZWN0aW9uIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInBhcmVudCI6eyJkZWZhdWx0IjoiLyIsImRlc2NyaXB0aW9uIjoiUGFyZW50IG9mIHRoZSBjb25uZWN0aW9uIHNwZWNpZmllZCBhcyBhIHBhdGggKC9cdTAwM2Nncm91cFx1MDAzZS9cdTAwM2Nncm91cFx1MDAzZSkuIERlZmF1bHRzIHRvIFJPT1QgaWYgbm90IHNwZWNpZmllZC4iLCJ0eXBlIjoic3RyaW5nIn0sInByb3RvY29sIjp7ImRlc2NyaXB0aW9uIjoiUHJvdG9jb2wgb2YgdGhlIGNvbm5lY3Rpb24uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZ3VhY2Ftb2xlUmVmIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ29ubmVjdGlvblN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDb25uZWN0aW9uLiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgcmVwcmVzZW50IHRoZSBsYXRlc3QgYXZhaWxhYmxlIG9ic2VydmF0aW9ucyBvZiBhbiBvYmplY3QncyBzdGF0ZS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiAtLS0gVGhpcyBzdHJ1Y3QgaXMgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYXMgYW4gYXJyYXkgYXQgdGhlIGZpZWxkIHBhdGggLnN0YXR1cy5jb25kaXRpb25zLiAgRm9yIGV4YW1wbGUsIFxuIHR5cGUgRm9vU3RhdHVzIHN0cnVjdHsgLy8gUmVwcmVzZW50cyB0aGUgb2JzZXJ2YXRpb25zIG9mIGEgZm9vJ3MgY3VycmVudCBzdGF0ZS4gLy8gS25vd24gLnN0YXR1cy5jb25kaXRpb25zLnR5cGUgYXJlOiBcIkF2YWlsYWJsZVwiLCBcIlByb2dyZXNzaW5nXCIsIGFuZCBcIkRlZ3JhZGVkXCIgLy8gK3BhdGNoTWVyZ2VLZXk9dHlwZSAvLyArcGF0Y2hTdHJhdGVneT1tZXJnZSAvLyArbGlzdFR5cGU9bWFwIC8vICtsaXN0TWFwS2V5PXR5cGUgQ29uZGl0aW9ucyBbXW1ldGF2MS5Db25kaXRpb24gYGpzb246XCJjb25kaXRpb25zLG9taXRlbXB0eVwiIHBhdGNoU3RyYXRlZ3k6XCJtZXJnZVwiIHBhdGNoTWVyZ2VLZXk6XCJ0eXBlXCIgcHJvdG9idWY6XCJieXRlcywxLHJlcCxuYW1lPWNvbmRpdGlvbnNcImAgXG4gLy8gb3RoZXIgZmllbGRzIH0iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiBUaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uIFRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLiBGb3IgaW5zdGFuY2UsIGlmIC5tZXRhZGF0YS5nZW5lcmF0aW9uIGlzIGN1cnJlbnRseSAxMiwgYnV0IHRoZSAuc3RhdHVzLmNvbmRpdGlvbnNbeF0ub2JzZXJ2ZWRHZW5lcmF0aW9uIGlzIDksIHRoZSBjb25kaXRpb24gaXMgb3V0IG9mIGRhdGUgd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4gUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsIGFuZCB3aGV0aGVyIHRoZSB2YWx1ZXMgYXJlIGNvbnNpZGVyZWQgYSBndWFyYW50ZWVkIEFQSS4gVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuIFRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLiAtLS0gTWFueSAuY29uZGl0aW9uLnR5cGUgdmFsdWVzIGFyZSBjb25zaXN0ZW50IGFjcm9zcyByZXNvdXJjZXMgbGlrZSBBdmFpbGFibGUsIGJ1dCBiZWNhdXNlIGFyYml0cmFyeSBjb25kaXRpb25zIGNhbiBiZSB1c2VmdWwgKHNlZSAubm9kZS5zdGF0dXMuY29uZGl0aW9ucyksIHRoZSBhYmlsaXR5IHRvIGRlY29uZmxpY3QgaXMgaW1wb3J0YW50LiBUaGUgcmVnZXggaXQgbWF0Y2hlcyBpcyAoZG5zMTEyM1N1YmRvbWFpbkZtdC8pPyhxdWFsaWZpZWROYW1lRm10KSIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImlkZW50aWZpZXIiOnsiZGVzY3JpcHRpb24iOiJHdWFjYW1vbGUgaW50ZXJuYWwgaWRlbnRpZmllciBvZiB0aGUgY29ubmVjdGlvbi4gTWlzc2luZyBpZiBjb25uZWN0aW9uIG5vdCB5ZXQgY29uZmlndXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInBhcmVudCI6eyJkZXNjcmlwdGlvbiI6Ikd1YWNhbW9sZSBpbnRlcm5hbCBpZGVudGlmaWVyIG9mIHRoZSBjb25uZWN0aW9uJ3MgcGFyZW50IGdyb3VwLiBNaXNzaW5nIGlmIGNvbm5lY3Rpb24gbm90IHlldCBjb25maWd1cmVkLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
  name: ""
- image: ghcr.io/guacamole-operator/guacamole-operator-bundle:0.1.0
  name: ""
- image: ghcr.io/guacamole-operator/guacamole-operator:0.1.0
  name: ""
schema: olm.bundle
